rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funzioni helper per riuso
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(ownerId) {
      return isAuth() && request.auth.uid == ownerId;
    }
    
    // Regole per la collection "listings" (annunci)
    match /listings/{listingId} {
      allow read: if true;  // tutti possono leggere gli annunci
      allow create: if isAuth();  // solo utenti loggati possono creare
      allow update, delete: if isOwner(resource.data.ownerId);
      // Solo il proprietario (field ownerId) può modificare o cancellare il proprio annuncio
      
      // Sotto-collezione commenti/recensioni per ogni annuncio (se applicabile)
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuth();
        allow update, delete: if isOwner(resource.data.userId);
      }
    }
    
    // Regole per la collection "users" (profili utente)
    match /users/{userId} {
      allow read: if true;  // permetti lettura pubblica dei profili 
      allow create, update, delete: if isOwner(userId);
      // Ogni utente può creare/modificare solo il proprio profilo
      
      // Sotto-collezioni degli utenti
      match /listings/{listingId} {
        allow read: if true;
        allow write: if isOwner(userId);
      }
      
      match /saved/{savedId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Regole per la collection "ratings" (valutazioni)
    match /ratings/{ratingId} {
      allow read: if true;  // tutti possono leggere le valutazioni
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
      // Solo l'autore della valutazione può modificarla/eliminarla
    }
    
    // Regole per messaggi tra utenti
    match /messages/{messageId} {
      allow read: if isAuth() && (
        request.auth.uid == resource.data.senderId || 
        request.auth.uid == resource.data.receiverId
      );
      allow create: if isAuth() && request.resource.data.senderId == request.auth.uid;
      allow update: if false;  // messaggi non modificabili una volta inviati
      allow delete: if isOwner(resource.data.senderId);
    }
    
    // Regole per la collection "notifications" (notifiche)
    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuth();
      allow update: if isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }
  }
}